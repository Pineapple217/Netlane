// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/Pineapple217/Netlane/pkg/ent/node"
	"github.com/Pineapple217/Netlane/pkg/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	nodeFields := schema.Node{}.Fields()
	_ = nodeFields
	// nodeDescName is the schema descriptor for name field.
	nodeDescName := nodeFields[0].Descriptor()
	// node.NameValidator is a validator for the "name" field. It is called by the builders before save.
	node.NameValidator = nodeDescName.Validators[0].(func(string) error)
	// nodeDescHost is the schema descriptor for host field.
	nodeDescHost := nodeFields[1].Descriptor()
	// node.HostValidator is a validator for the "host" field. It is called by the builders before save.
	node.HostValidator = nodeDescHost.Validators[0].(func(string) error)
	// nodeDescCreatedAt is the schema descriptor for created_at field.
	nodeDescCreatedAt := nodeFields[2].Descriptor()
	// node.DefaultCreatedAt holds the default value on creation for the created_at field.
	node.DefaultCreatedAt = nodeDescCreatedAt.Default.(func() time.Time)
}
